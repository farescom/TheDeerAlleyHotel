package system.domain.mediator;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;

import system.domain.model.Query;
import system.domain.model.SingleRoom;

/** Setup a server using socket object given in the conntructor */
class ServerCommunicationThread extends Thread
{
	private ServerModelManager modelManager;

	private ObjectOutputStream out;
	private ObjectInputStream in;
	
	private Socket clientSocket;
    
	public ServerCommunicationThread(Socket socket, ServerModelManager modelManager) throws IOException, ParserConfigurationException, TransformerException
	{
		this.modelManager = modelManager;
		this.clientSocket = socket;
		
		// create input stream attached to the socket
		in = new ObjectInputStream(clientSocket.getInputStream());
		// create output stream attached to the socket
		 out = new ObjectOutputStream(clientSocket.getOutputStream());
		
		this.start();
	}
	
	public void run()
	{
		try
		{
			while(true)
			{
				Object data = in.readObject();
				Query query = (Query)data;
				
				//System.out.println(query);
				
				// REPLY
				// Need to be programmed how to format the solution and send it back
				// will be done by Sliman Jakub El-Fara
				
				int number = (int)(Math.random()*5) + 1;
				for (int i = 0; i< number; i++)
				{
					SingleRoom singleRoom = new SingleRoom(i);
					out.writeObject(singleRoom);
				}
			}
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		catch (ClassNotFoundException e)
		{
			e.printStackTrace();
		}
	}
}